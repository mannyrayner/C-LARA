I am going to give you a short passage in {l2_language}, presented in a JSON format. I want you to add {l1_language} glosses in the following way.

The JSON is a list of pairs. The first element in each pair is a string which is either a {l2_language} word or a punctuation mark. If the second element in the pair is non-null, it specifies a multi-word expression (MWE) and indicates that this element is part of the given MWE.

Your task is to replace the second element in each pair with a gloss in {l1_language}. Use the following rules:

1. If the element is marked as an MWE, the gloss should be for the given MWE. Each component of an MWE must have the exact same gloss for the MWE, regardless of context. If the MWE appears to be a proper name, and you cannot find a known form of the proper name in {l1_language}, gloss the proper name as itself or a transliteration of itself. 

2. If the second element is null, the gloss should be for the first element, if there is a sensible way to produce such a gloss. If the first element appears to be a proper name, and you cannot find a known form of the proper name in {l1_language}, gloss the proper name as itself or a transliteration of itself. 

3. If the second element is null, and there  is no sensible way to gloss the first element in {l1_language}, the gloss should be specifically '-'. 

{examples}

Here are the items to gloss:

{simplified_elements_json}
MWEs: {mwes}

{context_text}

Do not add or remove any elements or alter the structure of the JSON list provided in the input.

Write out just the annotated JSON with no introduction, since it will be processed by a Python script.